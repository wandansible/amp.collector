#jinja2: trim_blocks: "false", lstrip_blocks: "true"
# {{ ansible_managed }}
Listen 7655

<VirtualHost *:7655>

    SSLEngine on
    SSLCertificateFile /etc/amppki/server/amppki-cert.pem
    SSLCertificateKeyFile /etc/amppki/server/amppki-key.pem
    SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
    SSLProtocol TLSv1.2

    WSGIDaemonProcess amppki user=ampweb group=ampweb threads=4 \
      python-eggs=/tmp/.python-eggs python-path=/usr/share/amppki/

    WSGIScriptAlias / /usr/share/amppki/pyramid.wsgi

    <Directory /usr/share/amppki>
      WSGIApplicationGroup %{GLOBAL}
      WSGIProcessGroup amppki
      WSGIPassAuthorization On
      WSGIScriptReloading On
      {% if amppki_acl_networks is defined %}
      # restrict access to amppki
          {% for network in amppki_acl_networks %}
      Require ip {{ network }}
          {% endfor %}
      Require ip 127.0.0.0/8
      {% else %}
      Require all granted
      {% endif %}
    </Directory>

    ErrorLog ${APACHE_LOG_DIR}/error.log

    # Possible values include: debug, info, notice, warn, error, crit,
    # alert, emerg.
    LogLevel warn

    CustomLog ${APACHE_LOG_DIR}/access.log combined

</VirtualHost>
